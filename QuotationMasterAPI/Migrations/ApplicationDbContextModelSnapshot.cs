// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuotationMasterAPI.Data;

#nullable disable

namespace QuotationMasterAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuotationMasterAPI.Models.QuotationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QId")
                        .HasColumnType("int");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.Property<bool>("StructuralWorkGroundFloor")
                        .HasColumnType("bit");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("lenth_in_feets")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("no_of_floors")
                        .HasColumnType("int");

                    b.Property<decimal>("slab_area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("width_in_feets")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("QId");

                    b.ToTable("QuotationDetails");
                });

            modelBuilder.Entity("QuotationMasterAPI.Models.QuotationMaster", b =>
                {
                    b.Property<int>("QId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QSId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("int");

                    b.HasKey("QId");

                    b.ToTable("QuotationMasters");
                });

            modelBuilder.Entity("QuotationMasterAPI.Models.QuotationDetail", b =>
                {
                    b.HasOne("QuotationMasterAPI.Models.QuotationMaster", "QuotationMaster")
                        .WithMany("QuotationDetails")
                        .HasForeignKey("QId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuotationMaster");
                });

            modelBuilder.Entity("QuotationMasterAPI.Models.QuotationMaster", b =>
                {
                    b.Navigation("QuotationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
